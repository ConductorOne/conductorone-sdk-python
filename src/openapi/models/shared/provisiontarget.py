"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from openapi.types import BaseModel
import pydantic
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class ProvisionTargetTypedDict(TypedDict):
    r"""ProvisionTarget indicates the specific app, app entitlement, and if known, the app user and grant duration of this provision step"""
    
    app_entitlement_id: NotRequired[str]
    r"""The app entitlement that should be provisioned."""
    app_id: NotRequired[str]
    r"""The app in which the entitlement should be provisioned"""
    app_user_id: NotRequired[str]
    r"""The app user that should be provisioned. May be unset if the app user is unknown"""
    grant_duration: NotRequired[str]
    

class ProvisionTarget(BaseModel):
    r"""ProvisionTarget indicates the specific app, app entitlement, and if known, the app user and grant duration of this provision step"""
    
    app_entitlement_id: Annotated[Optional[str], pydantic.Field(alias="appEntitlementId")] = None
    r"""The app entitlement that should be provisioned."""
    app_id: Annotated[Optional[str], pydantic.Field(alias="appId")] = None
    r"""The app in which the entitlement should be provisioned"""
    app_user_id: Annotated[Optional[str], pydantic.Field(alias="appUserId")] = None
    r"""The app user that should be provisioned. May be unset if the app user is unknown"""
    grant_duration: Annotated[Optional[str], pydantic.Field(alias="grantDuration")] = None
    
