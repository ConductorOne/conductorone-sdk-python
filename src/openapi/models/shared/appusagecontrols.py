"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from openapi.types import BaseModel
import pydantic
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class AppUsageControlsTypedDict(TypedDict):
    r"""The AppUsageControls object describes some peripheral configuration for an app."""
    
    app_id: NotRequired[str]
    r"""The app that this object belongs to."""
    notify: NotRequired[bool]
    r"""Whether or not to notify some if they have access to the app, but has not used it within a configurable amount of time."""
    notify_after_days: NotRequired[int]
    r"""The duration in days after which we notify users of nonusage."""
    revoke: NotRequired[bool]
    r"""Whether or not to revoke a grant if they have access to the app, but has not used it within a configurable amount of time."""
    revoke_after_days: NotRequired[int]
    r"""The duration in days after which we revoke users that have not used that grant."""
    

class AppUsageControls(BaseModel):
    r"""The AppUsageControls object describes some peripheral configuration for an app."""
    
    app_id: Annotated[Optional[str], pydantic.Field(alias="appId")] = None
    r"""The app that this object belongs to."""
    notify: Optional[bool] = None
    r"""Whether or not to notify some if they have access to the app, but has not used it within a configurable amount of time."""
    notify_after_days: Annotated[Optional[int], pydantic.Field(alias="notifyAfterDays")] = None
    r"""The duration in days after which we notify users of nonusage."""
    revoke: Optional[bool] = None
    r"""Whether or not to revoke a grant if they have access to the app, but has not used it within a configurable amount of time."""
    revoke_after_days: Annotated[Optional[int], pydantic.Field(alias="revokeAfterDays")] = None
    r"""The duration in days after which we revoke users that have not used that grant."""
    
