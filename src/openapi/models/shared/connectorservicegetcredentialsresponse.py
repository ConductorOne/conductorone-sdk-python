"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .connectorcredential import ConnectorCredential, ConnectorCredentialTypedDict
from openapi.types import BaseModel
import pydantic
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class ConnectorServiceGetCredentialsResponseTypedDict(TypedDict):
    r"""ConnectorServiceGetCredentialsResponse is the response returned by the get method."""
    
    connector_credential: NotRequired[ConnectorCredentialTypedDict]
    r"""ConnectorCredential is used by a connector to authenticate with conductor one."""
    

class ConnectorServiceGetCredentialsResponse(BaseModel):
    r"""ConnectorServiceGetCredentialsResponse is the response returned by the get method."""
    
    connector_credential: Annotated[Optional[ConnectorCredential], pydantic.Field(alias="credential")] = None
    r"""ConnectorCredential is used by a connector to authenticate with conductor one."""
    
