"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from openapi.types import BaseModel
import pydantic
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class Severity(str, Enum):
    r"""The severity field."""
    UNKNOWN = "UNKNOWN"
    HINT = "HINT"
    INFO = "INFO"
    WARNING = "WARNING"
    ERROR = "ERROR"

class MarkerTypedDict(TypedDict):
    r"""The Marker message."""
    
    end_column: NotRequired[int]
    r"""The endColumn field."""
    end_line_number: NotRequired[int]
    r"""The endLineNumber field."""
    message: NotRequired[str]
    r"""The message field."""
    severity: NotRequired[Severity]
    r"""The severity field."""
    start_column: NotRequired[int]
    r"""The startColumn field."""
    start_line_number: NotRequired[int]
    r"""The startLineNumber field."""
    

class Marker(BaseModel):
    r"""The Marker message."""
    
    end_column: Annotated[Optional[int], pydantic.Field(alias="endColumn")] = None
    r"""The endColumn field."""
    end_line_number: Annotated[Optional[int], pydantic.Field(alias="endLineNumber")] = None
    r"""The endLineNumber field."""
    message: Optional[str] = None
    r"""The message field."""
    severity: Optional[Severity] = None
    r"""The severity field."""
    start_column: Annotated[Optional[int], pydantic.Field(alias="startColumn")] = None
    r"""The startColumn field."""
    start_line_number: Annotated[Optional[int], pydantic.Field(alias="startLineNumber")] = None
    r"""The startLineNumber field."""
    
