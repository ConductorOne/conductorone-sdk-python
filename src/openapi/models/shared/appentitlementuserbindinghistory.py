"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from datetime import datetime
from openapi.types import BaseModel
import pydantic
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class AppEntitlementUserBindingHistoryTypedDict(TypedDict):
    r"""The AppEntitlementUserBindingHistory message."""
    
    app_entitlement_id: NotRequired[str]
    r"""The ID of the app entitlement that the app user has access to"""
    app_id: NotRequired[str]
    r"""The ID of the app associated with the app entitlement"""
    app_user_id: NotRequired[str]
    r"""The ID of the app user that has access to the app entitlement"""
    granted_at: NotRequired[datetime]
    revoked_at: NotRequired[datetime]
    

class AppEntitlementUserBindingHistory(BaseModel):
    r"""The AppEntitlementUserBindingHistory message."""
    
    app_entitlement_id: Annotated[Optional[str], pydantic.Field(alias="appEntitlementId")] = None
    r"""The ID of the app entitlement that the app user has access to"""
    app_id: Annotated[Optional[str], pydantic.Field(alias="appId")] = None
    r"""The ID of the app associated with the app entitlement"""
    app_user_id: Annotated[Optional[str], pydantic.Field(alias="appUserId")] = None
    r"""The ID of the app user that has access to the app entitlement"""
    granted_at: Annotated[Optional[datetime], pydantic.Field(alias="grantedAt")] = None
    revoked_at: Annotated[Optional[datetime], pydantic.Field(alias="revokedAt")] = None
    
