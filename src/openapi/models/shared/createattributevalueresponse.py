"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .attributevalue import AttributeValue, AttributeValueTypedDict
from openapi.types import BaseModel
import pydantic
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class CreateAttributeValueResponseTypedDict(TypedDict):
    r"""CreateAttributeValueResponse is the response for creating an attribute value."""
    
    attribute_value: NotRequired[AttributeValueTypedDict]
    r"""AttributeValue is the value of an attribute of a defined type."""
    

class CreateAttributeValueResponse(BaseModel):
    r"""CreateAttributeValueResponse is the response for creating an attribute value."""
    
    attribute_value: Annotated[Optional[AttributeValue], pydantic.Field(alias="value")] = None
    r"""AttributeValue is the value of an attribute of a defined type."""
    
