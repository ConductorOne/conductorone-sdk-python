"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .acceptinstance import AcceptInstance, AcceptInstanceTypedDict
from .approvalinstance import ApprovalInstance, ApprovalInstanceTypedDict
from .provisioninstance import ProvisionInstance, ProvisionInstanceTypedDict
from .rejectinstance import RejectInstance, RejectInstanceTypedDict
from .waitinstance import WaitInstance, WaitInstanceTypedDict
from enum import Enum
from openapi.types import BaseModel, Nullable, OptionalNullable, UNSET, UNSET_SENTINEL
import pydantic
from pydantic import model_serializer
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class PolicyStepInstanceState(str, Enum):
    r"""The state of the step, which is either active or done."""
    POLICY_STEP_STATE_UNSPECIFIED = "POLICY_STEP_STATE_UNSPECIFIED"
    POLICY_STEP_STATE_ACTIVE = "POLICY_STEP_STATE_ACTIVE"
    POLICY_STEP_STATE_DONE = "POLICY_STEP_STATE_DONE"

class PolicyStepInstanceTypedDict(TypedDict):
    r"""The policy step instance includes a reference to an instance of a policy step that tracks state and has a unique ID.

    This message contains a oneof named instance. Only a single field of the following list may be set at a time:
    - approval
    - provision
    - accept
    - reject
    - wait

    """
    
    accept_instance: NotRequired[Nullable[AcceptInstanceTypedDict]]
    r"""This policy step indicates that a ticket should have an approved outcome. This is a terminal approval state and is used to explicitly define the end of approval steps.
    The instance is just a marker for it being copied into an active policy.
    """
    approval_instance: NotRequired[Nullable[ApprovalInstanceTypedDict]]
    r"""The approval instance object describes the way a policy step should be approved as well as its outcomes and state.

    This message contains a oneof named outcome. Only a single field of the following list may be set at a time:
    - approved
    - denied
    - reassigned
    - restarted
    - reassignedByError

    """
    provision_instance: NotRequired[Nullable[ProvisionInstanceTypedDict]]
    r"""A provision instance describes the specific configuration of an executing provision policy step including actions taken and notification id.

    This message contains a oneof named outcome. Only a single field of the following list may be set at a time:
    - completed
    - cancelled
    - errored
    - reassignedByError

    """
    reject_instance: NotRequired[Nullable[RejectInstanceTypedDict]]
    r"""This policy step indicates that a ticket should have a denied outcome. This is a terminal approval state and is used to explicitly define the end of approval steps.
    The instance is just a marker for it being copied into an active policy.
    """
    wait_instance: NotRequired[Nullable[WaitInstanceTypedDict]]
    r"""Used by the policy engine to describe an instantiated wait step.

    This message contains a oneof named until. Only a single field of the following list may be set at a time:
    - condition


    This message contains a oneof named outcome. Only a single field of the following list may be set at a time:
    - succeeded
    - timedOut

    """
    id: NotRequired[str]
    r"""The ID of the PolicyStepInstance. This is required by many action submission endpoints to indicate what step you're approving."""
    policy_generation_id: NotRequired[str]
    r"""The policy generation id refers to the version of the policy that this step was created from."""
    state: NotRequired[PolicyStepInstanceState]
    r"""The state of the step, which is either active or done."""
    

class PolicyStepInstance(BaseModel):
    r"""The policy step instance includes a reference to an instance of a policy step that tracks state and has a unique ID.

    This message contains a oneof named instance. Only a single field of the following list may be set at a time:
    - approval
    - provision
    - accept
    - reject
    - wait

    """
    
    accept_instance: Annotated[OptionalNullable[AcceptInstance], pydantic.Field(alias="accept")] = UNSET
    r"""This policy step indicates that a ticket should have an approved outcome. This is a terminal approval state and is used to explicitly define the end of approval steps.
    The instance is just a marker for it being copied into an active policy.
    """
    approval_instance: Annotated[OptionalNullable[ApprovalInstance], pydantic.Field(alias="approval")] = UNSET
    r"""The approval instance object describes the way a policy step should be approved as well as its outcomes and state.

    This message contains a oneof named outcome. Only a single field of the following list may be set at a time:
    - approved
    - denied
    - reassigned
    - restarted
    - reassignedByError

    """
    provision_instance: Annotated[OptionalNullable[ProvisionInstance], pydantic.Field(alias="provision")] = UNSET
    r"""A provision instance describes the specific configuration of an executing provision policy step including actions taken and notification id.

    This message contains a oneof named outcome. Only a single field of the following list may be set at a time:
    - completed
    - cancelled
    - errored
    - reassignedByError

    """
    reject_instance: Annotated[OptionalNullable[RejectInstance], pydantic.Field(alias="reject")] = UNSET
    r"""This policy step indicates that a ticket should have a denied outcome. This is a terminal approval state and is used to explicitly define the end of approval steps.
    The instance is just a marker for it being copied into an active policy.
    """
    wait_instance: Annotated[OptionalNullable[WaitInstance], pydantic.Field(alias="wait")] = UNSET
    r"""Used by the policy engine to describe an instantiated wait step.

    This message contains a oneof named until. Only a single field of the following list may be set at a time:
    - condition


    This message contains a oneof named outcome. Only a single field of the following list may be set at a time:
    - succeeded
    - timedOut

    """
    id: Optional[str] = None
    r"""The ID of the PolicyStepInstance. This is required by many action submission endpoints to indicate what step you're approving."""
    policy_generation_id: Annotated[Optional[str], pydantic.Field(alias="policyGenerationId")] = None
    r"""The policy generation id refers to the version of the policy that this step was created from."""
    state: Optional[PolicyStepInstanceState] = None
    r"""The state of the step, which is either active or done."""
    
    @model_serializer(mode="wrap")
    def serialize_model(self, handler):
        optional_fields = ["AcceptInstance", "ApprovalInstance", "ProvisionInstance", "RejectInstance", "WaitInstance", "id", "policyGenerationId", "state"]
        nullable_fields = ["AcceptInstance", "ApprovalInstance", "ProvisionInstance", "RejectInstance", "WaitInstance"]
        null_default_fields = []

        serialized = handler(self)

        m = {}

        for n, f in self.model_fields.items():
            k = f.alias or n
            val = serialized.get(k)

            if val is not None and val != UNSET_SENTINEL:
                m[k] = val
            elif val != UNSET_SENTINEL and (
                not k in optional_fields
                or (
                    k in optional_fields
                    and k in nullable_fields
                    and (
                        self.__pydantic_fields_set__.intersection({n})
                        or k in null_default_fields
                    )  # pylint: disable=no-member
                )
            ):
                m[k] = val

        return m
        
