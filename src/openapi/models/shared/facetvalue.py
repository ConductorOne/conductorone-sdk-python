"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from openapi.types import BaseModel
from openapi.utils import serialize_int, validate_int
import pydantic
from pydantic.functional_serializers import PlainSerializer
from pydantic.functional_validators import BeforeValidator
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class FacetValueTypedDict(TypedDict):
    r"""A FacetValue message contains count and value of the facet entry."""
    
    count: NotRequired[int]
    r"""The count of the values in this facet."""
    display_name: NotRequired[str]
    r"""The name of this facet."""
    icon_url: NotRequired[str]
    r"""The icon for this facet."""
    value: NotRequired[str]
    r"""The value of this facet."""
    

class FacetValue(BaseModel):
    r"""A FacetValue message contains count and value of the facet entry."""
    
    count: Annotated[Optional[int], BeforeValidator(validate_int), PlainSerializer(serialize_int(True))] = None
    r"""The count of the values in this facet."""
    display_name: Annotated[Optional[str], pydantic.Field(alias="displayName")] = None
    r"""The name of this facet."""
    icon_url: Annotated[Optional[str], pydantic.Field(alias="iconUrl")] = None
    r"""The icon for this facet."""
    value: Optional[str] = None
    r"""The value of this facet."""
    
