"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import httpx
from openapi.models.shared import connectorservicegetresponse as shared_connectorservicegetresponse
from openapi.types import BaseModel
from openapi.utils import FieldMetadata, PathParamMetadata
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class C1APIAppV1ConnectorServiceGetRequestTypedDict(TypedDict):
    app_id: str
    id: str
    

class C1APIAppV1ConnectorServiceGetRequest(BaseModel):
    app_id: Annotated[str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))]
    id: Annotated[str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))]
    

class C1APIAppV1ConnectorServiceGetResponseTypedDict(TypedDict):
    content_type: str
    r"""HTTP response content type for this operation"""
    status_code: int
    r"""HTTP response status code for this operation"""
    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""
    connector_service_get_response: NotRequired[shared_connectorservicegetresponse.ConnectorServiceGetResponseTypedDict]
    r"""The ConnectorServiceGetResponse message contains the connectorView, and an expand mask."""
    

class C1APIAppV1ConnectorServiceGetResponse(BaseModel):
    content_type: str
    r"""HTTP response content type for this operation"""
    status_code: int
    r"""HTTP response status code for this operation"""
    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""
    connector_service_get_response: Optional[shared_connectorservicegetresponse.ConnectorServiceGetResponse] = None
    r"""The ConnectorServiceGetResponse message contains the connectorView, and an expand mask."""
    
