"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .appentitlementexpandmask import AppEntitlementExpandMask, AppEntitlementExpandMaskTypedDict
from enum import Enum
import pydantic
from sdk.types import BaseModel
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class GrantedStatus(str, Enum):
    r"""Search entitlements with this granted status for your signed in user."""
    UNSPECIFIED = "UNSPECIFIED"
    ALL = "ALL"
    GRANTED = "GRANTED"
    NOT_GRANTED = "NOT_GRANTED"

class RequestCatalogSearchServiceSearchEntitlementsRequestTypedDict(TypedDict):
    r"""The RequestCatalogSearchServiceSearchEntitlementsRequest searches entitlements, but only ones that are available to you through the open catalogs."""
    
    app_entitlement_expand_mask: NotRequired[AppEntitlementExpandMaskTypedDict]
    r"""The app entitlement expand mask allows the user to get additional information when getting responses containing app entitlement views."""
    app_display_name: NotRequired[str]
    r"""Search entitlements that belong to this app name (exact match)."""
    entitlement_alias: NotRequired[str]
    r"""Search for entitlements with this alias (exact match)."""
    granted_status: NotRequired[GrantedStatus]
    r"""Search entitlements with this granted status for your signed in user."""
    include_deleted: NotRequired[bool]
    r"""Include deleted entitlements"""
    page_size: NotRequired[int]
    r"""The pageSize where 0 <= pageSize <= 100. Values < 10 will be set to 10. A value of 0 returns the default page size (currently 25)"""
    page_token: NotRequired[str]
    r"""The pageToken field."""
    query: NotRequired[str]
    r"""Fuzzy search the display name of resource types."""
    

class RequestCatalogSearchServiceSearchEntitlementsRequest(BaseModel):
    r"""The RequestCatalogSearchServiceSearchEntitlementsRequest searches entitlements, but only ones that are available to you through the open catalogs."""
    
    app_entitlement_expand_mask: Annotated[Optional[AppEntitlementExpandMask], pydantic.Field(alias="expandMask")] = None
    r"""The app entitlement expand mask allows the user to get additional information when getting responses containing app entitlement views."""
    app_display_name: Annotated[Optional[str], pydantic.Field(alias="appDisplayName")] = None
    r"""Search entitlements that belong to this app name (exact match)."""
    entitlement_alias: Annotated[Optional[str], pydantic.Field(alias="entitlementAlias")] = None
    r"""Search for entitlements with this alias (exact match)."""
    granted_status: Annotated[Optional[GrantedStatus], pydantic.Field(alias="grantedStatus")] = None
    r"""Search entitlements with this granted status for your signed in user."""
    include_deleted: Annotated[Optional[bool], pydantic.Field(alias="includeDeleted")] = None
    r"""Include deleted entitlements"""
    page_size: Annotated[Optional[int], pydantic.Field(alias="pageSize")] = None
    r"""The pageSize where 0 <= pageSize <= 100. Values < 10 will be set to 10. A value of 0 returns the default page size (currently 25)"""
    page_token: Annotated[Optional[str], pydantic.Field(alias="pageToken")] = None
    r"""The pageToken field."""
    query: Optional[str] = None
    r"""Fuzzy search the display name of resource types."""
    
