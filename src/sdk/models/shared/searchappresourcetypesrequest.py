"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import List, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SearchAppResourceTypesRequest:
    r"""Search for app resources based on some filters."""
    UNSET='__SPEAKEASY_UNSET__'
    app_ids: Optional[List[str]] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('appIds'), 'exclude': lambda f: f is SearchAppResourceTypesRequest.UNSET }})
    r"""A list of app IDs to restrict the search by."""
    app_user_ids: Optional[List[str]] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('appUserIds'), 'exclude': lambda f: f is SearchAppResourceTypesRequest.UNSET }})
    r"""A list of app user IDs to restrict the search by."""
    exclude_resource_type_ids: Optional[List[str]] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('excludeResourceTypeIds'), 'exclude': lambda f: f is SearchAppResourceTypesRequest.UNSET }})
    r"""A list of resource type IDs to exclude from the search."""
    exclude_resource_type_trait_ids: Optional[List[str]] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('excludeResourceTypeTraitIds'), 'exclude': lambda f: f is SearchAppResourceTypesRequest.UNSET }})
    r"""A list of resource type trait IDs to exclude from the search."""
    page_size: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pageSize'), 'exclude': lambda f: f is None }})
    r"""The pageSize where 10 <= pageSize <= 100, default 25."""
    page_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pageToken'), 'exclude': lambda f: f is None }})
    r"""The pageToken field."""
    query: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('query'), 'exclude': lambda f: f is None }})
    r"""Fuzzy search the display name of resource types."""
    resource_type_ids: Optional[List[str]] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resourceTypeIds'), 'exclude': lambda f: f is SearchAppResourceTypesRequest.UNSET }})
    r"""A list of resource type IDs to restrict the search by."""
    resource_type_trait_ids: Optional[List[str]] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resourceTypeTraitIds'), 'exclude': lambda f: f is SearchAppResourceTypesRequest.UNSET }})
    r"""A list of resource type trait IDs to restrict the search by."""
    

