"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .taskexpandmask import TaskExpandMask, TaskExpandMaskTypedDict
from .taskgrantsource import TaskGrantSource, TaskGrantSourceTypedDict
import pydantic
from sdk.types import BaseModel
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class TaskServiceCreateGrantRequestTypedDict(TypedDict):
    r"""Create a grant task."""
    
    app_entitlement_id: str
    r"""The ID of the app entitlement to grant access to."""
    app_id: str
    r"""The ID of the app that is associated with the entitlement."""
    task_expand_mask: NotRequired[TaskExpandMaskTypedDict]
    r"""The task expand mask is an array of strings that specifes the related objects the requester wishes to have returned when making a request where the expand mask is part of the input. Use '*' to view all possible responses."""
    task_grant_source: NotRequired[TaskGrantSourceTypedDict]
    r"""The TaskGrantSource message tracks which external URL was the source of the specificed grant ticket."""
    app_user_id: NotRequired[str]
    r"""The ID of the app user to grant access for. This field and identityUserId cannot both be set for a given request."""
    description: NotRequired[str]
    r"""The description of the request."""
    emergency_access: NotRequired[bool]
    r"""Boolean stating whether or not the task is marked as emergency access."""
    grant_duration: NotRequired[str]
    identity_user_id: NotRequired[str]
    r"""The ID of the user associated with the app user we are granting access for. This field cannot be set if appUserID is also set."""
    

class TaskServiceCreateGrantRequest(BaseModel):
    r"""Create a grant task."""
    
    app_entitlement_id: Annotated[str, pydantic.Field(alias="appEntitlementId")]
    r"""The ID of the app entitlement to grant access to."""
    app_id: Annotated[str, pydantic.Field(alias="appId")]
    r"""The ID of the app that is associated with the entitlement."""
    task_expand_mask: Annotated[Optional[TaskExpandMask], pydantic.Field(alias="expandMask")] = None
    r"""The task expand mask is an array of strings that specifes the related objects the requester wishes to have returned when making a request where the expand mask is part of the input. Use '*' to view all possible responses."""
    task_grant_source: Annotated[Optional[TaskGrantSource], pydantic.Field(alias="source")] = None
    r"""The TaskGrantSource message tracks which external URL was the source of the specificed grant ticket."""
    app_user_id: Annotated[Optional[str], pydantic.Field(alias="appUserId")] = None
    r"""The ID of the app user to grant access for. This field and identityUserId cannot both be set for a given request."""
    description: Optional[str] = None
    r"""The description of the request."""
    emergency_access: Annotated[Optional[bool], pydantic.Field(alias="emergencyAccess")] = None
    r"""Boolean stating whether or not the task is marked as emergency access."""
    grant_duration: Annotated[Optional[str], pydantic.Field(alias="grantDuration")] = None
    identity_user_id: Annotated[Optional[str], pydantic.Field(alias="identityUserId")] = None
    r"""The ID of the user associated with the app user we are granting access for. This field cannot be set if appUserID is also set."""
    
