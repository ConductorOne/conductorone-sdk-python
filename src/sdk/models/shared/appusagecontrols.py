"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AppUsageControls:
    r"""The AppUsageControls object describes some peripheral configuration for an app."""
    app_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('appId'), 'exclude': lambda f: f is None }})
    r"""The app that this object belongs to."""
    notify: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notify'), 'exclude': lambda f: f is None }})
    r"""Whether or not to notify some if they have access to the app, but has not used it within a configurable amount of time."""
    notify_after_days: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notifyAfterDays'), 'exclude': lambda f: f is None }})
    r"""The duration in days after which we notify users of nonusage."""
    revoke: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('revoke'), 'exclude': lambda f: f is None }})
    r"""Whether or not to revoke a grant if they have access to the app, but has not used it within a configurable amount of time."""
    revoke_after_days: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('revokeAfterDays'), 'exclude': lambda f: f is None }})
    r"""The duration in days after which we revoke users that have not used that grant."""
    

