"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from datetime import datetime
from enum import Enum
import pydantic
from sdk.types import BaseModel
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class Outcome(str, Enum):
    r"""The outcome of the certification."""
    CERTIFY_OUTCOME_UNSPECIFIED = "CERTIFY_OUTCOME_UNSPECIFIED"
    CERTIFY_OUTCOME_CERTIFIED = "CERTIFY_OUTCOME_CERTIFIED"
    CERTIFY_OUTCOME_DECERTIFIED = "CERTIFY_OUTCOME_DECERTIFIED"
    CERTIFY_OUTCOME_ERROR = "CERTIFY_OUTCOME_ERROR"
    CERTIFY_OUTCOME_CANCELLED = "CERTIFY_OUTCOME_CANCELLED"
    CERTIFY_OUTCOME_WAIT_TIMED_OUT = "CERTIFY_OUTCOME_WAIT_TIMED_OUT"

class TaskTypeCertifyTypedDict(TypedDict):
    r"""The TaskTypeCertify message indicates that a task is a certify task and all related details."""
    
    access_review_id: NotRequired[str]
    r"""The ID of the access review."""
    access_review_selection: NotRequired[str]
    r"""The ID of the specific access review object that owns this certify task. This is also set on a revoke task if the revoke task is created from the denied outcome of a certify task."""
    app_entitlement_id: NotRequired[str]
    r"""The ID of the app entitlement."""
    app_id: NotRequired[str]
    r"""The ID of the app."""
    app_user_id: NotRequired[str]
    r"""The ID of the app user."""
    identity_user_id: NotRequired[str]
    r"""The ID of the user."""
    outcome: NotRequired[Outcome]
    r"""The outcome of the certification."""
    outcome_time: NotRequired[datetime]
    

class TaskTypeCertify(BaseModel):
    r"""The TaskTypeCertify message indicates that a task is a certify task and all related details."""
    
    access_review_id: Annotated[Optional[str], pydantic.Field(alias="accessReviewId")] = None
    r"""The ID of the access review."""
    access_review_selection: Annotated[Optional[str], pydantic.Field(alias="accessReviewSelection")] = None
    r"""The ID of the specific access review object that owns this certify task. This is also set on a revoke task if the revoke task is created from the denied outcome of a certify task."""
    app_entitlement_id: Annotated[Optional[str], pydantic.Field(alias="appEntitlementId")] = None
    r"""The ID of the app entitlement."""
    app_id: Annotated[Optional[str], pydantic.Field(alias="appId")] = None
    r"""The ID of the app."""
    app_user_id: Annotated[Optional[str], pydantic.Field(alias="appUserId")] = None
    r"""The ID of the app user."""
    identity_user_id: Annotated[Optional[str], pydantic.Field(alias="identityUserId")] = None
    r"""The ID of the user."""
    outcome: Optional[Outcome] = None
    r"""The outcome of the certification."""
    outcome_time: Annotated[Optional[datetime], pydantic.Field(alias="outcomeTime")] = None
    
