"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import pydantic
from sdk.types import BaseModel
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class AcceptInstanceTypedDict(TypedDict):
    r"""This policy step indicates that a ticket should have an approved outcome. This is a terminal approval state and is used to explicitly define the end of approval steps.
    The instance is just a marker for it being copied into an active policy.
    """
    
    accept_message: NotRequired[str]
    r"""An optional message to include in the comments when a task is automatically accepted."""
    

class AcceptInstance(BaseModel):
    r"""This policy step indicates that a ticket should have an approved outcome. This is a terminal approval state and is used to explicitly define the end of approval steps.
    The instance is just a marker for it being copied into an active policy.
    """
    
    accept_message: Annotated[Optional[str], pydantic.Field(alias="acceptMessage")] = None
    r"""An optional message to include in the comments when a task is automatically accepted."""
    
