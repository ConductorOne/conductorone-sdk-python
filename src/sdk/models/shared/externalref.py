"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ExternalRefExternalRefSource(str, Enum):
    r"""The source of the external reference."""
    UNSPECIFIED = 'UNSPECIFIED'
    JIRA = 'JIRA'


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class ExternalRef:
    r"""A reference to an external source. This value is unused currently, but may be brought back."""
    external_ref_source: Optional[ExternalRefExternalRefSource] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('externalRefSource'), 'exclude': lambda f: f is None }})
    r"""The source of the external reference."""
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The name of the external reference."""
    url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url'), 'exclude': lambda f: f is None }})
    r"""The URL to the external reference."""
    

