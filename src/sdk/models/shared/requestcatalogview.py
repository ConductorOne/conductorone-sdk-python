"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .requestcatalog import RequestCatalog
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RequestCatalogView:
    r"""The request catalog view contains the serialized request catalog and paths to objects referenced by the request catalog."""
    access_entitlements_path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accessEntitlementsPath'), 'exclude': lambda f: f is None }})
    r"""JSONPATH expression indicating the location of the access entitlement objects, that the request catalog allows users to request, in the array."""
    app_paths: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('appPaths'), 'exclude': lambda f: f is None }})
    r"""JSONPATH expression indicating the location of the App object in the array."""
    created_by_user_path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createdByUserPath'), 'exclude': lambda f: f is None }})
    r"""JSONPATH expression indicating the location of the User object, that created the request catalog, in the array."""
    request_catalog: Optional[RequestCatalog] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requestCatalog'), 'exclude': lambda f: f is None }})
    r"""The RequestCatalog is used for managing which entitlements are requestable, and who can request them."""
    

