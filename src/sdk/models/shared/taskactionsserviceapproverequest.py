"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .taskexpandmask import TaskExpandMask, TaskExpandMaskTypedDict
import pydantic
from sdk.types import BaseModel
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class TaskActionsServiceApproveRequestTypedDict(TypedDict):
    r"""The TaskActionsServiceApproveRequest object lets you approve a task."""
    
    policy_step_id: str
    r"""The ID of the policy step on the given task to approve."""
    task_expand_mask: NotRequired[TaskExpandMaskTypedDict]
    r"""The task expand mask is an array of strings that specifes the related objects the requester wishes to have returned when making a request where the expand mask is part of the input. Use '*' to view all possible responses."""
    comment: NotRequired[str]
    r"""The comment attached to the request."""
    

class TaskActionsServiceApproveRequest(BaseModel):
    r"""The TaskActionsServiceApproveRequest object lets you approve a task."""
    
    policy_step_id: Annotated[str, pydantic.Field(alias="policyStepId")]
    r"""The ID of the policy step on the given task to approve."""
    task_expand_mask: Annotated[Optional[TaskExpandMask], pydantic.Field(alias="expandMask")] = None
    r"""The task expand mask is an array of strings that specifes the related objects the requester wishes to have returned when making a request where the expand mask is part of the input. Use '*' to view all possible responses."""
    comment: Optional[str] = None
    r"""The comment attached to the request."""
    
