"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from datetime import datetime
from enum import Enum
import pydantic
from sdk.types import BaseModel
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class ConnectorStatusStatus(str, Enum):
    r"""The status of the connector sync."""
    SYNC_STATUS_UNSPECIFIED = "SYNC_STATUS_UNSPECIFIED"
    SYNC_STATUS_RUNNING = "SYNC_STATUS_RUNNING"
    SYNC_STATUS_DONE = "SYNC_STATUS_DONE"
    SYNC_STATUS_ERROR = "SYNC_STATUS_ERROR"
    SYNC_STATUS_DISABLED = "SYNC_STATUS_DISABLED"

class ConnectorStatusTypedDict(TypedDict):
    r"""The status field on the connector is used to track the status of the connectors sync, and when syncing last started, completed, or caused the connector to update."""
    
    completed_at: NotRequired[datetime]
    last_error: NotRequired[str]
    r"""The last error encountered by the connector."""
    started_at: NotRequired[datetime]
    status: NotRequired[ConnectorStatusStatus]
    r"""The status of the connector sync."""
    updated_at: NotRequired[datetime]
    

class ConnectorStatus(BaseModel):
    r"""The status field on the connector is used to track the status of the connectors sync, and when syncing last started, completed, or caused the connector to update."""
    
    completed_at: Annotated[Optional[datetime], pydantic.Field(alias="completedAt")] = None
    last_error: Annotated[Optional[str], pydantic.Field(alias="lastError")] = None
    r"""The last error encountered by the connector."""
    started_at: Annotated[Optional[datetime], pydantic.Field(alias="startedAt")] = None
    status: Optional[ConnectorStatusStatus] = None
    r"""The status of the connector sync."""
    updated_at: Annotated[Optional[datetime], pydantic.Field(alias="updatedAt")] = None
    
