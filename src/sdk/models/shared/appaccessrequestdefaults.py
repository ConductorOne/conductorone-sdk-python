"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import List, Optional


@dataclasses.dataclass
class DurationUnset:
    pass


class State(str, Enum):
    r"""The last applied state of the app access request defaults."""
    APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_UNSPECIFIED = 'APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_UNSPECIFIED'
    APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_RUNNING = 'APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_RUNNING'
    APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_SUCCESS = 'APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_SUCCESS'
    APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_FAILED = 'APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_FAILED'
    APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_CANCELING = 'APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_CANCELING'
    APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_CANCEL_SUCCESS = 'APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_CANCEL_SUCCESS'
    APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_CANCEL_ERROR = 'APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_CANCEL_ERROR'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AppAccessRequestDefaults:
    r"""The AppAccessRequestDefaults message.

    This message contains a oneof named max_grant_duration. Only a single field of the following list may be set at a time:
      - durationUnset
      - durationGrant
    """
    UNSET='__SPEAKEASY_UNSET__'
    app_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('appId'), 'exclude': lambda f: f is None }})
    r"""The app id for the app access request rule"""
    catalog_ids: Optional[List[str]] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('catalogIds'), 'exclude': lambda f: f is AppAccessRequestDefaults.UNSET }})
    r"""The request catalog ids for the app access request rule."""
    defaults_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('defaultsEnabled'), 'exclude': lambda f: f is None }})
    r"""If true the app level request configuration will be applied to specified resource types."""
    duration_grant: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('durationGrant'), 'exclude': lambda f: f is None }})
    duration_unset: Optional[DurationUnset] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('durationUnset'), 'exclude': lambda f: f is AppAccessRequestDefaults.UNSET }})
    emergency_grant_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('emergencyGrantEnabled'), 'exclude': lambda f: f is None }})
    r"""If emergency grants are enabled for this app access request rule."""
    emergency_grant_policy_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('emergencyGrantPolicyId'), 'exclude': lambda f: f is None }})
    r"""The policy id for the emergency grant policy."""
    request_policy_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requestPolicyId'), 'exclude': lambda f: f is None }})
    r"""The requestPolicyId field."""
    resource_type_ids: Optional[List[str]] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resourceTypeIds'), 'exclude': lambda f: f is AppAccessRequestDefaults.UNSET }})
    r"""The app resource type ids for which the app access request defaults are applied."""
    state: Optional[State] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""The last applied state of the app access request defaults."""
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AppAccessRequestDefaults1:
    r"""The AppAccessRequestDefaults message.

    This message contains a oneof named max_grant_duration. Only a single field of the following list may be set at a time:
      - durationUnset
      - durationGrant
    """
    UNSET='__SPEAKEASY_UNSET__'
    catalog_ids: Optional[List[str]] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('catalogIds'), 'exclude': lambda f: f is AppAccessRequestDefaults1.UNSET }})
    r"""The request catalog ids for the app access request rule."""
    defaults_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('defaultsEnabled'), 'exclude': lambda f: f is None }})
    r"""If true the app level request configuration will be applied to specified resource types."""
    duration_grant: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('durationGrant'), 'exclude': lambda f: f is None }})
    duration_unset: Optional[DurationUnset] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('durationUnset'), 'exclude': lambda f: f is AppAccessRequestDefaults1.UNSET }})
    emergency_grant_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('emergencyGrantEnabled'), 'exclude': lambda f: f is None }})
    r"""If emergency grants are enabled for this app access request rule."""
    emergency_grant_policy_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('emergencyGrantPolicyId'), 'exclude': lambda f: f is None }})
    r"""The policy id for the emergency grant policy."""
    request_policy_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requestPolicyId'), 'exclude': lambda f: f is None }})
    r"""The requestPolicyId field."""
    resource_type_ids: Optional[List[str]] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resourceTypeIds'), 'exclude': lambda f: f is AppAccessRequestDefaults1.UNSET }})
    r"""The app resource type ids for which the app access request defaults are applied."""
    state: Optional[State] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""The last applied state of the app access request defaults."""
    

