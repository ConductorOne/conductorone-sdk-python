"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.shared import listappusersforidentitywithgrantresponse as shared_listappusersforidentitywithgrantresponse
from typing import Optional


@dataclasses.dataclass
class C1APIAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantRequest:
    app_entitlement_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'app_entitlement_id', 'style': 'simple', 'explode': False }})
    app_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'app_id', 'style': 'simple', 'explode': False }})
    identity_user_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'identity_user_id', 'style': 'simple', 'explode': False }})
    



@dataclasses.dataclass
class C1APIAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    list_app_users_for_identity_with_grant_response: Optional[shared_listappusersforidentitywithgrantresponse.ListAppUsersForIdentityWithGrantResponse] = dataclasses.field(default=None)
    r"""Successful response"""
    

