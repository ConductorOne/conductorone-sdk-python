"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.shared import requestcatalogmanagementserviceremoveaccessentitlementsrequest as shared_requestcatalogmanagementserviceremoveaccessentitlementsrequest
from ...models.shared import requestcatalogmanagementserviceremoveaccessentitlementsresponse as shared_requestcatalogmanagementserviceremoveaccessentitlementsresponse
from typing import Optional


@dataclasses.dataclass
class C1APIRequestcatalogV1RequestCatalogManagementServiceRemoveAccessEntitlementsRequest:
    catalog_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'catalog_id', 'style': 'simple', 'explode': False }})
    request_catalog_management_service_remove_access_entitlements_request: Optional[shared_requestcatalogmanagementserviceremoveaccessentitlementsrequest.RequestCatalogManagementServiceRemoveAccessEntitlementsRequest] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})
    



@dataclasses.dataclass
class C1APIRequestcatalogV1RequestCatalogManagementServiceRemoveAccessEntitlementsResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    request_catalog_management_service_remove_access_entitlements_response: Optional[shared_requestcatalogmanagementserviceremoveaccessentitlementsresponse.RequestCatalogManagementServiceRemoveAccessEntitlementsResponse] = dataclasses.field(default=None)
    r"""Empty response with a status code indicating success."""
    

